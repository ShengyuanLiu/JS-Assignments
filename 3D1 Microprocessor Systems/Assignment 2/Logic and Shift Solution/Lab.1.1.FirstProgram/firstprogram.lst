


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             FirstProgram, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000         ;load initial values
    7 00000000 E3A00F7D        LDR              r0,=500
    8 00000004 E3A01000        LDR              r1,=0
    9 00000008 E3A02009        LDR              r2,=9
   10 0000000C E3A03000        LDR              r3,=0
   11 00000010 E3A04001        LDR              r4,=1
   12 00000014         
   13 00000014         ;create a mask, get count, shift
   14 00000014 E0003004        AND              r3,r0,r4
   15 00000018 E0831001        ADD              r1,r3,r1
   16 0000001C E3A00001        MOV              r0,#1
   17 00000020         
   18 00000020         ;repeat 8 more times as branching and looping not allowe
                       d
   19 00000020         
   20 00000020 E0003004        AND              r3,r0,r4
   21 00000024 E0831001        ADD              r1,r3,r1
   22 00000028 E3A00001        MOV              r0,#1
   23 0000002C         
   24 0000002C E0003004        AND              r3,r0,r4
   25 00000030 E0831001        ADD              r1,r3,r1
   26 00000034 E3A00001        MOV              r0,#1
   27 00000038         
   28 00000038 E0003004        AND              r3,r0,r4
   29 0000003C E0831001        ADD              r1,r3,r1
   30 00000040 E3A00001        MOV              r0,#1
   31 00000044         
   32 00000044 E0003004        AND              r3,r0,r4
   33 00000048 E0831001        ADD              r1,r3,r1
   34 0000004C E3A00001        MOV              r0,#1
   35 00000050         
   36 00000050 E0003004        AND              r3,r0,r4
   37 00000054 E0831001        ADD              r1,r3,r1
   38 00000058 E3A00001        MOV              r0,#1
   39 0000005C         
   40 0000005C E0003004        AND              r3,r0,r4
   41 00000060 E0831001        ADD              r1,r3,r1
   42 00000064 E3A00001        MOV              r0,#1
   43 00000068         
   44 00000068         ;get final count
   45 00000068 E0422001        SUB              r2,r2,r1
   46 0000006C         
   47 0000006C         ;500_10 = 111110100_2 where there are 6 1s (stored in r4
                       ) and 3 0s (stored in r2)
   48 0000006C         
   49 0000006C EAFFFFFE 
                       stop    B                stop
   50 00000070         
   51 00000070                 END
Command Line: --debug --xref --apcs=interwork --depend=.\firstprogram.d -o.\fir
stprogram.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefi
ne="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_I
NTVEC SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.



ARM Macro Assembler    Page 2 


\firstprogram.lst FirstProgram.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FirstProgram 00000000

Symbol: FirstProgram
   Definitions
      At line 1 in file FirstProgram.s
   Uses
      None
Comment: FirstProgram unused
start 00000000

Symbol: start
   Definitions
      At line 5 in file FirstProgram.s
   Uses
      At line 3 in file FirstProgram.s
Comment: start used once
stop 0000006C

Symbol: stop
   Definitions
      At line 49 in file FirstProgram.s
   Uses
      At line 49 in file FirstProgram.s
Comment: stop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file FirstProgram.s
   Uses
      None
Comment: main unused
1 symbol
341 symbols in table
