


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             FirstProgram, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F1090        LDR              r1, =hexstr ;address = 0xA10000
                                                            00
    7 00000004 E3A04000        LDR              r4, =0      ;bool for negative 
                                                            number
    8 00000008 E3A06000        LDR              r6, =0      ;count of hex bits
    9 0000000C E3A08000        LDR              r8, =0      ;final answer
   10 00000010         
   11 00000010         ;check for + or -
   12 00000010 E5D10000        LDRB             r0, [r1]    ;load first byte
   13 00000014 E350002D        CMP              r0, #'-'    ;check for + or -
   14 00000018 8A000002        BHI              count
   15 0000001C E2811001        ADD              r1, r1, #1  ;add 1 so this valu
                                                            e ignored for calc
   16 00000020 1A000000        BNE              count
   17 00000024 E3A04001        MOV              r4, #1      ;bool set for negat
                                                            ive number
   18 00000028         count
   19 00000028 E7D10006        LDRB             r0, [r1, r6]
   20 0000002C E3500000        CMP              r0, #0      ;check if NULL TERM
                                                            INATED yet
   21 00000030 0A000001        BEQ              Cdone       ;is the thing termi
                                                            nated
   22 00000034 E2866001        ADD              r6, r6, #1  ;increase count by 
                                                            1
   23 00000038 1AFFFFFA        BNE              count       ;hex bits counted
   24 0000003C         
   25 0000003C E2467001 
                       Cdone   SUB              r7, r6, #1  ;array indices star
                                                            t at 0 instead of 1
                                                            
   26 00000040 E3A06000        LDR              r6, =0      ;number of places t
                                                            o shift hex value
   27 00000044 E3A02004        LDR              r2, =4      ;number of bits to 
                                                            shift hex value one
                                                             place away
   28 00000048         
   29 00000048         ;gets the value
   30 00000048 E7D10007 
                       VALloop LDRB             r0, [r1, r7] ;load hex values f
                                                            rom right to left
   31 0000004C E200300F        AND              r3, r0, #15 ;gets value of LSB 
                                                            which give first di
                                                            git value
   32 00000050 E3500041        CMP              r0, #'A'    ;check if required 
                                                            +9   
   33 00000054 3A000000        BCC              STRval
   34 00000058 E2833009        ADD              r3, r3, #9  ;A-F need +9 to equ
                                                            al hex value 
   35 0000005C         
   36 0000005C E0050296 
                       STRval  MUL              r5, r6, r2  ;calc how many bits
                                                             to be shifted
   37 00000060 E1A03513        LSL              r3, r5      ;shifts the hex val
                                                            ue the required pla



ARM Macro Assembler    Page 2 


                                                            ces left
   38 00000064 E0888003        ADD              r8, r8, r3  ;adds the value to 
                                                            the register
   39 00000068 E2866001        ADD              r6, r6, #1  ;increases shift am
                                                            ount to next slot
   40 0000006C         
   41 0000006C E2477001        SUB              r7, r7, #1  ;go to next point i
                                                            n the loop
   42 00000070 E3770001        CMP              r7, #-1     ;check outside memo
                                                            ry index
   43 00000074 1AFFFFF3        BNE              VALloop
   44 00000078         
   45 00000078 E3540001        CMP              r4, #1      ;check if negative 
                                                            number
   46 0000007C 1A000002        BNE              store       ;skip if positive n
                                                            umber
   47 00000080 E59F0014        LDR              r0, =0xFFFFFFFF ;EOR with this 
                                                            because all bits se
                                                            t
   48 00000084 E0288000        EOR              r8, r8, r0  ;flip all the bits
   49 00000088 E2888001        ADD              r8, r8, #1  ;finish making a si
                                                            gned binary number 
                                                             
   50 0000008C         
   51 0000008C E59F700C 
                       store   LDR              r7, =0xa1000027 ;address to sto
                                                            re value
   52 00000090 E5878000        STR              r8, [r7]    ;store the value
   53 00000094 EAFFFFFE 
                       stop    B                stop
   54 00000098         
   55 00000098 00000000 
              FFFFFFFF 
              A1000027         AREA             TestData, DATA, READWRITE
   56 00000000 2D 41 42 
              43 31 00 hexstr  DCB              "-ABC1",0   ;null terminated st
                                                            ring
   57 00000006         
   58 00000006                 END
Command Line: --debug --xref --apcs=interwork --depend=.\firstprogram.d -o.\fir
stprogram.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefi
ne="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_I
NTVEC SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.
\firstprogram.lst FirstProgram.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Cdone 0000003C

Symbol: Cdone
   Definitions
      At line 25 in file FirstProgram.s
   Uses
      At line 21 in file FirstProgram.s
Comment: Cdone used once
FirstProgram 00000000

Symbol: FirstProgram
   Definitions
      At line 1 in file FirstProgram.s
   Uses
      None
Comment: FirstProgram unused
STRval 0000005C

Symbol: STRval
   Definitions
      At line 36 in file FirstProgram.s
   Uses
      At line 33 in file FirstProgram.s
Comment: STRval used once
VALloop 00000048

Symbol: VALloop
   Definitions
      At line 30 in file FirstProgram.s
   Uses
      At line 43 in file FirstProgram.s
Comment: VALloop used once
count 00000028

Symbol: count
   Definitions
      At line 18 in file FirstProgram.s
   Uses
      At line 14 in file FirstProgram.s
      At line 16 in file FirstProgram.s
      At line 23 in file FirstProgram.s

start 00000000

Symbol: start
   Definitions
      At line 5 in file FirstProgram.s
   Uses
      At line 3 in file FirstProgram.s
Comment: start used once
stop 00000094

Symbol: stop
   Definitions
      At line 53 in file FirstProgram.s
   Uses
      At line 53 in file FirstProgram.s
Comment: stop used once
store 0000008C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: store
   Definitions
      At line 51 in file FirstProgram.s
   Uses
      At line 46 in file FirstProgram.s
Comment: store used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestData 00000000

Symbol: TestData
   Definitions
      At line 55 in file FirstProgram.s
   Uses
      None
Comment: TestData unused
hexstr 00000000

Symbol: hexstr
   Definitions
      At line 56 in file FirstProgram.s
   Uses
      At line 6 in file FirstProgram.s
Comment: hexstr used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file FirstProgram.s
   Uses
      None
Comment: main unused
1 symbol
350 symbols in table
